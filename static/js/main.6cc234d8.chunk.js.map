{"version":3,"sources":["components/EmployeeTable.js","components/Wrapper.js","components/Title.js","components/SearchForm.js","components/Hero.js","components/Sorting.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","EmployeeTable","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","sort","map","row","key","name","scope","alt","src","image","position","email","phone","dob","Wrapper","children","Title","SearchForm","htmlFor","onChange","handleInputChange","value","type","placeholder","id","onClick","handleFormSubmit","Hero","style","backgroundImage","Sorting","App","state","sortType","Employees","componentDidMount","query","search","then","res","setState","data","result","catch","err","console","log","event","target","sortAscending","a","b","sortDescending","reverse","this","employees","employee","DOB","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+oDAWMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OA8CCC,MA1Cf,SAAuBC,GACrB,IAAMC,EAAUN,IAGhB,OAGE,kBAACO,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQJ,MAAOU,aAAW,sBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,WAIJ,kBAACC,EAAA,EAAD,KACGZ,EAAMa,KAAKC,KAAI,SAACC,GAAD,OACd,kBAACN,EAAA,EAAD,CAAUO,IAAKD,EAAIE,MACjB,kBAACP,EAAA,EAAD,CAAWP,UAAU,KAAKe,MAAM,OAC7BH,EAAIE,MAGT,kBAACP,EAAA,EAAD,KAAW,yBAAKJ,UAAU,iBAAgB,yBAAKa,IAAKnB,EAAMiB,KAAMG,IAAKpB,EAAMqB,SAC3E,kBAACX,EAAA,EAAD,CAAWC,MAAM,SAASX,EAAMiB,MAChC,kBAACP,EAAA,EAAD,CAAWC,MAAM,SAASX,EAAMsB,UAChC,kBAACZ,EAAA,EAAD,CAAWC,MAAM,SAASX,EAAMuB,OAChC,kBAACb,EAAA,EAAD,CAAWC,MAAM,SAASX,EAAMwB,OAChC,kBAACd,EAAA,EAAD,CAAWC,MAAM,SAASX,EAAMyB,cC3C7BC,MAJf,SAAiB1B,GACf,OAAO,yBAAKM,UAAU,WAAWN,EAAM2B,WCG1BC,MAJf,SAAe5B,GACb,OAAO,wBAAIM,UAAU,SAASN,EAAM2B,WCsBvBE,MAvBf,SAAoB7B,GAClB,OACE,8BACE,yBAAKM,UAAU,cACb,2BAAOwB,QAAQ,UAAf,WACA,2BACEC,SAAU/B,EAAMgC,kBAChBC,MAAOjC,EAAMiC,MACbhB,KAAK,SACLiB,KAAK,OACL5B,UAAU,eACV6B,YAAY,yBACZC,GAAG,WAEL,6BACA,4BAAQC,QAASrC,EAAMsC,iBAAkBhC,UAAU,mBAAnD,aCPOiC,MARf,SAAcvC,GACZ,OACE,yBAAKM,UAAU,mBAAmBkC,MAAO,CAAEC,gBAAgB,OAAD,OAASzC,EAAMyC,gBAAf,OACvDzC,EAAM2B,W,SCMIe,EATD,SAAC1C,GACf,OACE,6BACQ,4BAAQM,UAAU,SAAS+B,QAAS,kBAAI,EAAKxB,KAAK,eAAlD,uBACA,4BAAQP,UAAU,SAAS+B,QAAS,kBAAI,EAAKxB,KAAK,gBAAlD,yB,QCuEG8B,E,4MAjEbC,MAAQ,CACNC,SAAU,YACVC,UAAW,CAAC,K,EAGdC,kBAAoB,SAAAC,GAClBF,EAAUG,OAAOD,GACdE,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEN,UAAWK,EAAIE,KAAKC,YAChDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG9BxB,kBAAoB,SAAA2B,GAClB,EAAKP,SAAS,CAAEH,OAAQU,EAAMC,OAAO3B,S,EAKrC4B,cAAgB,WAAO,IACbf,EAAc,EAAKF,MAAnBE,UACRA,EAAUjC,MAAK,SAACiD,EAAGC,GAAJ,OAAUD,EAAIC,KAC7B,EAAKX,SAAS,CAAEN,e,EAGlBkB,eAAiB,WAAO,IACdlB,EAAc,EAAKF,MAAnBE,UACRA,EAAUjC,MAAK,SAACiD,EAAGC,GAAJ,OAAUD,EAAIC,KAAGE,UAChC,EAAKb,SAAS,CAAEN,e,uDAIMoB,KAAKtB,MAApBuB,UACR,OACC,kBAAC,EAAD,KACE,6BACJ,kBAAC,EAAD,CAAM1B,gBAAgB,iWAClB,kBAAC,EAAD,2BACA,oHAGM,kBAAC,EAAD,CACAH,iBAAkB4B,KAAK5B,iBACvBN,kBAAmBkC,KAAKlC,kBACxBoC,SAAUF,KAAKE,WAGjB,kBAAC,EAAD,CACAP,cAAe,YACfG,eAAgB,eAGnBE,KAAKtB,MAAMuB,UAAUtD,KAAKC,KAAI,SAAAqD,GAAS,OACtC,kBAAC,EAAD,CACE/B,GAAI+B,EAAU/B,GACdnB,KAAMkD,EAAUlD,KAChBK,SAAU6C,EAAU7C,SACpBC,MAAO4C,EAAU5C,MACjBC,MAAO2C,EAAU3C,MACjB6C,IAAKF,EAAU1C,c,GA3DT6C,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjC,MAAK,SAAAkC,GACJA,EAAaC,gBAEd9B,OAAM,SAAA+B,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.6cc234d8.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction EmployeeTable(props) {\n  const classes = useStyles();\n\n \n  return (\n\n    // Table Header\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"Table Of Employees\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Image</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Position</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Phone</TableCell>\n            <TableCell align=\"right\">D.O.B</TableCell>\n          </TableRow>\n        </TableHead>\n    \n        <TableBody>\n          {props.sort.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n                </TableCell>\n\n            <TableCell><div className=\"img-container\"><img alt={props.name} src={props.image} /></div>\n            <TableCell align=\"right\">{props.name}</TableCell>\n            <TableCell align=\"right\">{props.position}</TableCell>\n            <TableCell align=\"right\">{props.email}</TableCell>\n            <TableCell align=\"right\">{props.phone}</TableCell>\n            <TableCell align=\"right\">{props.dob}</TableCell>\n            </TableCell>\n            </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For an Employee\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from \"react\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\n\nconst Sorting = (props) => {\n  return (\n    <div>\n            <button className=\"button\" onClick={()=>this.sort('ascending')}>Sort by Accencding </button>\n            <button className=\"button\" onClick={()=>this.sort('descending')}>Sort by Descending </button>\n    </div>\n    )\n  };\n  \n  export default Sorting;","import React, { Component } from \"react\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport SearchForm from \"./components/SearchForm\";\nimport Hero from \"./components/Hero\";\nimport Sorting from \"./components/Sorting\";\nimport Employees from \"./Employees.json\";\n\n\nclass App extends Component {\n  // Setting this.state.employees to the employee json array\n  state = {\n    sortType: 'ascending',\n    Employees: ['']\n  };\n\n  componentDidMount = query => {\n    Employees.search(query)\n      .then(res => this.setState({ Employees: res.data.result }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  // Map over this.state.employees and render a employeeTable component for each employee object\n\n    sortAscending = () => {\n      const { Employees } = this.state;\n      Employees.sort((a, b) => a - b)    \n      this.setState({ Employees })\n    };\n\n    sortDescending = () => {\n      const { Employees } = this.state;\n      Employees.sort((a, b) => a - b).reverse()\n      this.setState({ Employees })\n    };\n\n  render() { \n     const { employees } =  this.state;\n     return (\n      <Wrapper>\n        <div>  \n    <Hero backgroundImage=\"https://images.squarespace-cdn.com/content/v1/556ea5c8e4b081da85e406c7/1509577883908-TEUQVWA2Y2HA7C50A5EB/ke17ZwdGBToddI8pDm48kNIz01GxeNglza_traDdevsUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKck_3oyjxD2E6g656zntaR4vQBwPCV_Yc9BnFEdXAQ6xzMr4wPFfphDwEQcs_2fgoE/Toggl_Blog+Illustrations_MarkConlan25?format=2500w\">\n        <Title>Employee Directory</Title>\n        <h3>Click on carrots to filter by heading or use the search box to narrow your results</h3>\n    </Hero>\n</div>\n              <SearchForm               \n              handleFormSubmit={this.handleFormSubmit}\n              handleInputChange={this.handleInputChange}\n              employee={this.employee}\n              />\n            \n            <Sorting\n            sortAscending={'ascending'}\n            sortDescending={'descending'}\n            />\n          \n        {this.state.employees.sort.map(employees => (\n          <EmployeeTable\n            id={employees.id}\n            name={employees.name}\n            position={employees.position}\n            email={employees.email}\n            phone={employees.phone}\n            DOB={employees.dob}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}